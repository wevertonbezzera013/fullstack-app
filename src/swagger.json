{
    "openapi": "3.0.0",
    "info": {
        "title": "OZMAP API",
        "termsOfService": "http://localhost:8080/terms",
        "contact": {
            "email": "wevertonbezzera013@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080/",
            "description": "Test API"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "summary": "Register User",
                "description": "This route is used to register users",
                "tags": ["auth"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Register"
                            },
                            "examples": {
                                "register": {
                                    "value": {
                                        "email": "swaggertest@email.com",
                                        "password": "123123",
                                        "username": "swaggertest"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "User already exists"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "summary": "User Login",
                "description": "This route is used to authenticate and log in users",
                "tags": ["auth"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Login"
                            },
                            "examples": {
                                "login": {
                                    "value": {
                                        "email": "swaggertest@email.com",
                                        "password": "123123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid email or password"
                    },
                    "403": {
                        "description": "Forbidden - Invalid credentials"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "summary": "User Logout",
                "description": "This route is used to log out users and invalidate session tokens",
                "tags": ["auth"],
                "responses": {
                    "401": {
                        "description": "Unauthorized - User not logged in or invalid session token"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "Get All Users",
                "description": "This route is used to retrieve a list of all users",
                "tags": ["users"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete User",
                "description": "This route is used to delete a user by ID",
                "tags": ["users"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID of the user to be deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "User not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "summary": "Update User",
                "description": "This route is used to update a user by ID",
                "tags": ["users"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID of the user to be updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "User not found"
                    },
                    "400": {
                        "description": "At least one field (username or email) is required for update"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/regions": {
            "get": {
                "summary": "Get All Regions",
                "description": "This route is used to retrieve a list of all regions",
                "tags": ["regions"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Region"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "summary": "Create Region",
                "description": "This route is used to create a new region",
                "tags": ["regions"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegionCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Name, coordinates, and owner are required to create a region"
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Region"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/regions/{id}": {
            "delete": {
                "summary": "Delete Region",
                "description": "This route is used to delete a region by ID",
                "tags": ["regions"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID of the region to be deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Region not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Region"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "summary": "Update Region",
                "description": "This route is used to update a region by ID",
                "tags": ["regions"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID of the region to be updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegionUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Region not found"
                    },
                    "400": {
                        "description": "At least one field (name or coordinates) is required for update"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Region"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/export/regions": {
            "get": {
                "summary": "Export Regions to CSV",
                "description": "This route is used to export regions data to a CSV file.",
                "tags": ["export"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/export/users": {
            "get": {
                "summary": "Export Users to CSV",
                "description": "This route is used to export users data to a CSV file.",
                "tags": ["export"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Register": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "Login": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "authentication": {
                        "type": "object",
                        "properties": {
                            "password": {
                                "type": "string"
                            },
                            "salt": {
                                "type": "string"
                            },
                            "sessionToken": {
                                "type": "string"
                            }
                        }
                    },
                    "coordinates": {
                        "type": "object",
                        "properties": {
                            "latitude": {
                                "type": "number",
                                "default": 0
                            },
                            "longitude": {
                                "type": "number",
                                "default": 0
                            }
                        }
                    }
                }
            },
            "UserUpdate": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            },
            "Region": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "coordinates": {
                        "type": "object",
                        "properties": {
                            "latitude": {
                                "type": "number",
                                "default": 0
                            },
                            "longitude": {
                                "type": "number",
                                "default": 0
                            }
                        }
                    },
                    "owner": {
                        "type": "string"
                    }
                }
            },
            "RegionCreate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "coordinates": {
                        "type": "object",
                        "properties": {
                            "latitude": {
                                "type": "number"
                            },
                            "longitude": {
                                "type": "number"
                            }
                        }
                    },
                    "owner": {
                        "type": "string"
                    }
                },
                "required": ["name", "coordinates", "owner"]
            },
            "RegionUpdate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "coordinates": {
                        "type": "object",
                        "properties": {
                            "latitude": {
                                "type": "number"
                            },
                            "longitude": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        }
    }
}
